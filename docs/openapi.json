{
    "openapi": "3.1.0",
    "info": {
        "title": "PandaScore csgo game mock data provider",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/csgo_game/": {
            "get": {
                "tags": [
                    "csgo_game"
                ],
                "summary": "Generate Csgo Game",
                "operationId": "generate_csgo_game_api_v1_csgo_game__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response_CsgoGameSchema_"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CsgoGameSchema": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "begin_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Begin At"
                    },
                    "map": {
                        "$ref": "#/components/schemas/MapSchema"
                    },
                    "match": {
                        "$ref": "#/components/schemas/MatchSchema"
                    },
                    "players": {
                        "items": {
                            "$ref": "#/components/schemas/TeamOpponentPlayerStatSchema"
                        },
                        "type": "array",
                        "title": "Players"
                    },
                    "rounds": {
                        "items": {
                            "$ref": "#/components/schemas/RoundSchema"
                        },
                        "type": "array",
                        "title": "Rounds"
                    }
                },
                "type": "object",
                "required": [
                    "begin_at",
                    "map",
                    "match",
                    "players",
                    "rounds"
                ],
                "title": "CsgoGameSchema"
            },
            "HTTPStatus": {
                "type": "integer",
                "enum": [
                    100,
                    101,
                    102,
                    103,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    226,
                    300,
                    301,
                    302,
                    303,
                    304,
                    305,
                    307,
                    308,
                    400,
                    401,
                    402,
                    403,
                    404,
                    405,
                    406,
                    407,
                    408,
                    409,
                    410,
                    411,
                    412,
                    413,
                    414,
                    415,
                    416,
                    417,
                    418,
                    421,
                    422,
                    423,
                    424,
                    425,
                    426,
                    428,
                    429,
                    431,
                    451,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    510,
                    511
                ],
                "title": "HTTPStatus",
                "description": "HTTP status codes and reason phrases\n\nStatus codes from the following RFCs are all observed:\n\n    * RFC 7231: Hypertext Transfer Protocol (HTTP/1.1), obsoletes 2616\n    * RFC 6585: Additional HTTP Status Codes\n    * RFC 3229: Delta encoding in HTTP\n    * RFC 4918: HTTP Extensions for WebDAV, obsoletes 2518\n    * RFC 5842: Binding Extensions to WebDAV\n    * RFC 7238: Permanent Redirect\n    * RFC 2295: Transparent Content Negotiation in HTTP\n    * RFC 2774: An HTTP Extension Framework\n    * RFC 7725: An HTTP Status Code to Report Legal Obstacles\n    * RFC 7540: Hypertext Transfer Protocol Version 2 (HTTP/2)\n    * RFC 2324: Hyper Text Coffee Pot Control Protocol (HTCPCP/1.0)\n    * RFC 8297: An HTTP Status Code for Indicating Hints\n    * RFC 8470: Using Early Data in HTTP"
            },
            "LeagueSchema": {
                "properties": {
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "LeagueSchema"
            },
            "MapSchema": {
                "properties": {
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "MapSchema"
            },
            "MatchSchema": {
                "properties": {
                    "league": {
                        "$ref": "#/components/schemas/LeagueSchema"
                    },
                    "serie": {
                        "$ref": "#/components/schemas/SerieSchema"
                    },
                    "tournament": {
                        "$ref": "#/components/schemas/TournamentSchema"
                    }
                },
                "type": "object",
                "required": [
                    "league",
                    "serie",
                    "tournament"
                ],
                "title": "MatchSchema"
            },
            "PlayerSchema": {
                "properties": {
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "nationality": {
                        "type": "string",
                        "title": "Nationality"
                    },
                    "hometown": {
                        "type": "string",
                        "title": "Hometown"
                    },
                    "birthday": {
                        "type": "string",
                        "title": "Birthday"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "nationality",
                    "hometown",
                    "birthday"
                ],
                "title": "PlayerSchema"
            },
            "Response_CsgoGameSchema_": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/CsgoGameSchema"
                    },
                    "status": {
                        "$ref": "#/components/schemas/HTTPStatus"
                    }
                },
                "type": "object",
                "required": [
                    "data",
                    "status"
                ],
                "title": "Response[CsgoGameSchema]"
            },
            "RoundOutcomeEnum": {
                "type": "string",
                "enum": [
                    "defused",
                    "exploded",
                    "eliminated",
                    "timeout"
                ],
                "title": "RoundOutcomeEnum"
            },
            "RoundSchema": {
                "properties": {
                    "ct_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Ct Id"
                    },
                    "t_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "T Id"
                    },
                    "round": {
                        "type": "integer",
                        "title": "Round"
                    },
                    "winner_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Winner Id"
                    },
                    "outcome": {
                        "$ref": "#/components/schemas/RoundOutcomeEnum"
                    }
                },
                "type": "object",
                "required": [
                    "ct_id",
                    "t_id",
                    "round",
                    "winner_id",
                    "outcome"
                ],
                "title": "RoundSchema"
            },
            "SerieSchema": {
                "properties": {
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "league_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "League Id"
                    },
                    "tier": {
                        "$ref": "#/components/schemas/SerieTierEnum"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "tier"
                ],
                "title": "SerieSchema"
            },
            "SerieTierEnum": {
                "type": "string",
                "enum": [
                    "a",
                    "b",
                    "c",
                    "d"
                ],
                "title": "SerieTierEnum"
            },
            "StatSchema": {
                "properties": {
                    "kills": {
                        "type": "integer",
                        "title": "Kills"
                    },
                    "deaths": {
                        "type": "integer",
                        "title": "Deaths"
                    },
                    "assists": {
                        "type": "integer",
                        "title": "Assists"
                    },
                    "flash_assists": {
                        "type": "integer",
                        "title": "Flash Assists"
                    },
                    "headshots": {
                        "type": "integer",
                        "title": "Headshots"
                    },
                    "first_kills_diff": {
                        "type": "integer",
                        "title": "First Kills Diff"
                    },
                    "k_d_diff": {
                        "type": "integer",
                        "title": "K D Diff"
                    },
                    "adr": {
                        "type": "integer",
                        "title": "Adr"
                    },
                    "kast": {
                        "type": "integer",
                        "title": "Kast"
                    },
                    "rating": {
                        "type": "integer",
                        "title": "Rating"
                    }
                },
                "type": "object",
                "required": [
                    "kills",
                    "deaths",
                    "assists",
                    "flash_assists",
                    "headshots",
                    "first_kills_diff",
                    "k_d_diff",
                    "adr",
                    "kast",
                    "rating"
                ],
                "title": "StatSchema"
            },
            "TeamOpponentPlayerStatSchema": {
                "properties": {
                    "team": {
                        "$ref": "#/components/schemas/TeamSchema"
                    },
                    "opponent": {
                        "$ref": "#/components/schemas/TeamSchema"
                    },
                    "player": {
                        "$ref": "#/components/schemas/PlayerSchema"
                    },
                    "stat": {
                        "$ref": "#/components/schemas/StatSchema"
                    }
                },
                "type": "object",
                "required": [
                    "team",
                    "opponent",
                    "player",
                    "stat"
                ],
                "title": "TeamOpponentPlayerStatSchema"
            },
            "TeamSchema": {
                "properties": {
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "location": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Location"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "TeamSchema"
            },
            "TournamentSchema": {
                "properties": {
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "serie_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Serie Id"
                    },
                    "prizepool": {
                        "type": "string",
                        "title": "Prizepool"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "prizepool"
                ],
                "title": "TournamentSchema"
            }
        }
    }
}